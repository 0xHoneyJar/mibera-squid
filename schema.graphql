type User @entity {
  id: ID! # User address
  loans: [Loan!]! @derivedFrom(field: "user")
  proposedTrades: [Trade!]! @derivedFrom(field: "proposer")
  acceptedTrades: [Trade!]! @derivedFrom(field: "acceptor")
}

type Loan @entity {
  id: ID! # Loan ID (backingLoanId)
  user: User!
  amount: BigInt! # backingOwed
  expiry: DateTime! # timestampDue
  status: LoanStatus!
  nftIds: [String!]! # Array of token IDs used as collateral
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum LoanStatus {
  ACTIVE
  EXPIRED
  PAID_BACK
}

type Trade @entity {
  id: ID! # Combination of offeredTokenId and timestamp
  proposer: User!
  acceptor: User
  offeredTokenId: BigInt!
  requestedTokenId: BigInt!
  status: TradeStatus!
  proposedAt: DateTime!
  completedAt: DateTime
  chain: String! # The blockchain network
}

enum TradeStatus {
  ACTIVE
  COMPLETED
  CANCELLED
}

type DailyRFV @entity {
  id: ID! # Combination of day timestamp and exact timestamp
  value: BigInt!
  timestamp: BigInt!
  day: BigInt! # Start of the day timestamp for easy sorting
}

# New entity to track tokens available for purchase in the treasury
type AvailableToken @entity {
  id: ID! # Token ID
  isAvailable: Boolean! # Whether the token is available for purchase
  addedAt: DateTime!
  updatedAt: DateTime!
  chain: String! # The blockchain network
}

type Order @entity {
  id: ID!
  user: String!
  tokenId: BigInt!
  amount: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  txHash: String!
  operator: String!
}

type UserTokenBalance @entity {
  id: ID!
  user: String!
  tokenId: BigInt!
  balance: BigInt!
  lastUpdatedAt: BigInt!
}

type MintActivity @entity {
  id: ID!
  user: String!
  contract: String!
  tokenStandard: String!
  tokenId: BigInt
  amount: BigInt
  quantity: BigInt
  timestamp: BigInt!
  blockNumber: BigInt!
  txHash: String!
  operator: String
  amountPaid: BigInt! # Native token paid (in wei)
  activityType: ActivityType! # Type of activity (MINT, SALE, PURCHASE)
}

enum ActivityType {
  MINT # Regular mint from contract
  SALE # Selling through marketplace
  PURCHASE # Buying through marketplace
}
