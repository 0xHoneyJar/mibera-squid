type Participation @entity {
  id: ID!
  phase: Int!
  user: String!
  amount: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  txHash: String!
}

type Refund @entity {
  id: ID!
  phase: Int!
  user: String!
  amount: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  txHash: String!
}

type PresalePhase @entity {
  id: ID!
  phase: Int!
  merkleRoot: String!
  refundRoot: String!
  priceInBERA: BigInt!
  participationCount: Int!
  refundCount: Int!
  totalParticipationAmount: BigInt!
  totalRefundAmount: BigInt!
}

type PresaleStats @entity {
  id: ID!
  currentPhase: Int!
  totalParticipants: Int!
  uniqueParticipants: Int!
  totalParticipationAmount: BigInt!
  totalRefundAmount: BigInt!
}

# New entities for loan tracking
type User @entity {
  id: ID! # User address
  loans: [Loan!]! @derivedFrom(field: "user")
}

type Loan @entity {
  id: ID! # Loan ID (backingLoanId)
  user: User!
  amount: BigInt! # backingOwed
  expiry: DateTime! # timestampDue
  status: LoanStatus!
  nftIds: [String!]! # Array of token IDs used as collateral
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum LoanStatus {
  ACTIVE
  EXPIRED
  PAID_BACK
}

type DailyRFV @entity {
  id: ID! # Combination of day timestamp and exact timestamp
  value: BigInt!
  timestamp: BigInt!
  day: BigInt! # Start of the day timestamp for easy sorting
}
